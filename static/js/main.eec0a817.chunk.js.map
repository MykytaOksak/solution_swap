{"version":3,"sources":["components/Header/Header.module.css","components/Home/Home.module.css","components/Footer/Footer.module.css","components/Header/Header.jsx","components/CreatePost/CreatePost.jsx","components/PostCard/PostCard.jsx","components/AllTasks/AllTasks.jsx","components/PB/PB.jsx","components/MathStat/MathStat.jsx","components/MathLog/MathLog.jsx","components/Home/Home.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","components/redux/state.js","index.js"],"names":["module","exports","Header","props","console","log","Fragment","Navbar","bg","collapseOnSelect","expand","variant","Brand","className","to","src","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","as","Jumbotron","HeaderStyle","jumbotron","Container","Row","Col","CreatePost","Form","Group","Control","rows","placeholder","Button","RenderTask","title","description","Card","style","Img","fluid","Body","Title","Text","Footer","PostCard","cardsArray","task","map","AllTasks","tasks","PB","MathStat","MathLog","Home","HomeStyle","home","FooterStyle","href","App","path","exact","render","state","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eec0a817.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotron\":\"Header_jumbotron__2Xo46\",\"nav\":\"Header_nav__3BHXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1CsI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotron\":\"Footer_jumbotron__1Pk3r\"};","import React from 'react'\r\nimport {Col, Container, Jumbotron, Nav, Navbar, Row} from 'react-bootstrap'\r\nimport HeaderStyle from './Header.module.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header = props => {\r\n    console.log(props)\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar bg='dark' collapseOnSelect expand=\"sm\" variant=\"dark\">\r\n                    <Navbar.Brand className='ml-4'  to=\"/\">\r\n                        <img src='https://www.pngrepo.com/png/208426/180/switch-swap.png' width='30' height='30'/>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav>\r\n                            <Nav.Link eventKey={1} as={Link} to=\"/Home\">Home</Nav.Link>\r\n                            <Nav.Link eventKey={2} as={Link} to=\"/AllTasks\">All tasks</Nav.Link>\r\n                            <Nav.Link eventKey={3} as={Link} to=\"/PB\">PB</Nav.Link>\r\n                            <Nav.Link eventKey={4} as={Link} to=\"/MathStat\">Math stat</Nav.Link>\r\n                            <Nav.Link eventKey={5} as={Link} to=\"/MathLog\">Math log</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n            </Navbar>\r\n            <Jumbotron className={HeaderStyle.jumbotron}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className='col-12 col-sm-6'>\r\n                            <h1>Solution Swap</h1>\r\n                            <p>Exchange your solutions with others!</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Button, Form} from 'react-bootstrap'\r\n\r\nconst CreatePost = () => {\r\n    return (\r\n        <Form>\r\n            <Form.Group>\r\n                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write about your problem...\"/>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n\r\n                <Button variant=\"dark\">Post</Button>\r\n            </Form.Group>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CreatePost","import React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport PostCardStyle from './PostCardStyle.module.css'\r\n\r\nconst RenderTask = ({title, description}) => {\r\n    return (\r\n        <Card bg='light' style={{width: '100%'}} className='mb-5' width='100%'>\r\n            <Card.Img variant=\"left\" src=\"holder.js/100px200\" fluid/>\r\n            <Card.Body>\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text>{description}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <small className=\"text-muted\">Last edited: 3 min ago</small>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nconst PostCard = props => {\r\n    const cardsArray = props.task.map(task => (\r\n        <RenderTask\r\n            title={task.title}\r\n            description={task.description}\r\n            id={task.id}/>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PostCard","import React from 'react'\r\nimport CreatePost from './../CreatePost/CreatePost'\r\nimport PostCard from '../PostCard/PostCard'\r\n\r\nconst AllTasks = props => {\r\n        return (\r\n        <div>\r\n            <CreatePost/>\r\n            <PostCard task={props.tasks}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllTasks","import React from 'react'\r\nimport CreatePost from './../CreatePost/CreatePost'\r\nimport PostCard from '../PostCard/PostCard'\r\n\r\nconst PB = props => {\r\n    return (\r\n        <div>\r\n            <CreatePost/>\r\n            <PostCard task={props.tasks}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PB","import React from 'react'\r\nimport CreatePost from './../CreatePost/CreatePost'\r\nimport PostCard from '../PostCard/PostCard'\r\n\r\nconst MathStat = props => {\r\n    return (\r\n        <div>\r\n            <CreatePost/>\r\n            <PostCard task={props.tasks}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MathStat","import React from 'react'\r\nimport CreatePost from './../CreatePost/CreatePost'\r\nimport PostCard from '../PostCard/PostCard'\r\n\r\nconst MathLog = props => {\r\n    return (\r\n        <div>\r\n            <CreatePost/>\r\n            <PostCard task={props.tasks}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MathLog","import React from 'react'\r\nimport HomeStyle from './Home.module.css'\r\n\r\nconst Home = props => {\r\n    return (\r\n        <div className={HomeStyle.home}>\r\n            <h4>Welcome on a truly communist's website!</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport {Row, Col, Container, Nav} from 'react-bootstrap'\r\nimport FooterStyle from './Footer.module.css'\r\n\r\nconst Footer = props => {\r\n    console.log(props)\r\n    return (\r\n        <footer className={FooterStyle.jumbotron}>\r\n            <Container >\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Telegram</h4>\r\n                        <a href='https://t.me/sdraste'>Link</a>\r\n                    </Col>\r\n                    <Col>\r\n                        <h4>Instagram</h4>\r\n                        <a href='https://instagram.com/ssdraste'>Link</a>\r\n                    </Col>\r\n                    <Col>\r\n                        <h4>LinkedIn</h4>\r\n                        <a href='https://www.linkedin.com/in/mykyta-oksak-8b90b91b4/'>Link</a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\nimport './App.css'\nimport {Col, Row, Container} from 'react-bootstrap'\nimport Header from './components/Header/Header'\nimport AllTasks from './components/AllTasks/AllTasks'\nimport PB from './components/PB/PB';\nimport {Redirect, BrowserRouter, Route} from 'react-router-dom';\nimport MathStat from './components/MathStat/MathStat';\nimport MathLog from './components/MathLog/MathLog';\nimport Home from './components/Home/Home';\nimport Footer from './components/Footer/Footer';\n\nconst App = props => {\n    return (\n        <BrowserRouter>\n            <Header/>\n            <Container>\n                <Row className='mt-3 mb-3'>\n                    <Col>\n                <Route path='/home' exact render={() => <Home tasks={props.state} />} />\n                <Route path='/AllTasks' render={() => <AllTasks tasks={props.state.AllTasks} />} />\n                <Route path='/PB' render={() => <PB tasks={props.state.PB}/>}/>\n                <Route path='/MathStat' render={() => <MathStat tasks={props.state.MathStat} />} />\n                <Route path='/MathLog' render={() => <MathLog tasks={props.state.MathLog} />} />\n                <Redirect to='/home' />\n                    </Col>\n                </Row>\n            </Container>\n            <Footer />\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","export const state = {\r\n    PB: [\r\n        {\r\n            id: 1,\r\n            title: 'Mathematical judgments',\r\n            description: 'Help to proof my mathematical judgments ...'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Calculation of ...',\r\n            description: 'Help me to calculate the probability of ...',\r\n        },\r\n    ],\r\n    MathStat: [\r\n        {\r\n            id: 1,\r\n            title: 'activeClassName attribute refuses to work',\r\n            description: 'The attribute has no impact on how the NavLink looks',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Calculation of ...',\r\n            description: 'Help me to calculate the probability of ...',\r\n        },\r\n    ],\r\n    MathLog: [\r\n        {\r\n            id: 1,\r\n            title: 'activeClassName attribute refuses to work',\r\n            description: 'The attribute has no impact on how the NavLink looks',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Mathematical judgments',\r\n            description: 'Help to proof my mathematical judgments ...'\r\n        }\r\n    ],\r\n    AllTasks: [\r\n        {\r\n            id: 1,\r\n            title: 'activeClassName attribute refuses to work',\r\n            description: 'The attribute has no impact on how the NavLink looks',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Mathematical judgments',\r\n            description: 'Help to proof my mathematical judgments ...'\r\n        },\r\n        {\r\n\r\n            id: 3,\r\n            title: 'Calculation of ...',\r\n            description: 'Help me to calculate the probability of ...',\r\n        },\r\n    ],\r\n}\r\n\r\nexport default {\r\n    state\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'holderjs/holder'\nimport {state} from './components/redux/state'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App state={state}/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}